

           .MMM..:MMMMMMM
          MMMMMMMMMMMMMMMMMM
          MMMMMMMMMMMMMMMMMMMM.
         MMMMMMMMMMMMMMMMMMMMMM
        ,MMMMMMMMMMMMMMMMMMMMMM:
        MMMMMMMMMMMMMMMMMMMMMMMM
  .MMMM'  MMMMMMMMMMMMMMMMMMMMMM
 MMMMMM    `MMMMMMMMMMMMMMMMMMMM.
MMMMMMMM      MMMMMMMMMMMMMMMMMM .
MMMMMMMMM.       `MMMMMMMMMMMMM' MM.
MMMMMMMMMMM.                     MMMM
`MMMMMMMMMMMMM.                 ,MMMMM.
 `MMMMMMMMMMMMMMMMM.          ,MMMMMMMM.
    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
      MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM:
         MMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
            `MMMMMMMMMMMMMMMMMMMMMMMM:
                ``MMMMMMMMMMMMMMMMM'[1G[19A[44C[48;2;43;43;69mâ•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®[48;2;56;59;78mâ•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
[44C[48;2;43;43;69mâ”‚ User        â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39myang0886 [/home/users/ntu/yang0886/]
[44C[48;2;43;43;69mâ”‚ Host:       â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39mx1000c4s1b0n0
[44C[48;2;43;43;69mâ”‚ Machine     â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39mHPE_CRAY_EX425 1.7.6
[44C[48;2;43;43;69mâ”‚ OS          â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39mRed Hat Enterprise Linux 8.4 (Ootpa)  [v8.4 (Ootpa)] [x86_64]
[44C[48;2;43;43;69mâ”‚ Kernel      â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39mLinux [v4.18.0-305.25.1.el8_4.x86_64]
[44C[48;2;43;43;69mâ”‚ Uptime      â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39m25 Days + 3:58:27
[44C[48;2;43;43;69mâ”‚ CPU         â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39mAMD EPYC 7713 64-Core [C:256] [2.00 GHz]
[44C[48;2;43;43;69mâ”‚ Memory      â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39m70.24 GiB / 1.97 TiB (3%[48;2;56;59;78m)
[44C[48;2;43;43;69mâ”‚ Disk        â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39m3.63 GiB / 1007.65 GiB (0%[48;2;56;59;78m)
[44C[48;2;43;43;69mâ”‚ Terminal    â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39mpbs_mom [] [PID:30081]
[44C[48;2;43;43;69mâ”‚ Shell       â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39mbash  [v4.4.20] [PID:3428351]
[44C[48;2;43;43;69mâ”‚ Local IPv4  â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39mhsn0: 10.150.2.18/16  [MTU:9000]
[44C[48;2;43;43;69mâ”‚ Local IPv6  â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39mhsn0: fe80::ff:fe00:31e3/64  [MTU:9000]
[44C[48;2;43;43;69mâ”‚ Public IPv4 â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39m103.72.192.8  [Singapore, SG]
[44C[48;2;43;43;69mâ”‚ Datetime    â”‚[48;2;56;59;78m[90mâ”‚                                                            â”‚[60D[39m2024-12-30  20:42:37  Monday  [W53] [UTC+0800]
[44C[48;2;43;43;69mâ•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯[48;2;56;59;78mâ•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯



thisssssssssssssssssssssssssssssssss is the start of PBS script
Processing xrd
Processing logxrd
Processing xrdat
Processing xrdppe
Processing xrdrank
Fitting 5 folds for each of 396 candidates, totalling 1980 fits
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.455e+09, tolerance: 1.468e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.898e+09, tolerance: 1.488e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.357e+09, tolerance: 1.439e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.005e+09, tolerance: 1.519e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.005e+09, tolerance: 1.519e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.497e+09, tolerance: 1.420e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.170e+06, tolerance: 1.468e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.898e+09, tolerance: 1.488e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.498e+09, tolerance: 1.420e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.456e+09, tolerance: 1.468e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.005e+09, tolerance: 1.519e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.456e+09, tolerance: 1.468e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.499e+06, tolerance: 1.428e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.841e+09, tolerance: 1.428e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.495e+06, tolerance: 1.428e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.170e+06, tolerance: 1.468e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.898e+09, tolerance: 1.488e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.357e+09, tolerance: 1.439e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.841e+09, tolerance: 1.428e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.495e+06, tolerance: 1.428e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.841e+09, tolerance: 1.428e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.407e+09, tolerance: 1.469e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.498e+09, tolerance: 1.420e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.509e+09, tolerance: 1.499e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.947e+09, tolerance: 1.459e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.337e+06, tolerance: 1.499e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.552e+09, tolerance: 1.450e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.947e+09, tolerance: 1.459e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.170e+06, tolerance: 1.468e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.710e+06, tolerance: 1.459e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.710e+06, tolerance: 1.459e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.406e+09, tolerance: 1.469e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.357e+09, tolerance: 1.439e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.510e+09, tolerance: 1.499e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.947e+09, tolerance: 1.459e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.714e+06, tolerance: 1.459e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.551e+09, tolerance: 1.450e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.337e+06, tolerance: 1.499e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.510e+09, tolerance: 1.499e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.407e+09, tolerance: 1.469e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.552e+09, tolerance: 1.450e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.338e+06, tolerance: 1.499e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.750e+08, tolerance: 1.428e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.162e+07, tolerance: 1.499e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.750e+08, tolerance: 1.428e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.419e+06, tolerance: 1.450e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.260e+06, tolerance: 1.420e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.368e+07, tolerance: 1.439e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.164e+07, tolerance: 1.499e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.454e+08, tolerance: 1.488e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.524e+07, tolerance: 1.469e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.454e+08, tolerance: 1.488e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.851e+08, tolerance: 1.459e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.019e+07, tolerance: 1.468e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.398e+06, tolerance: 1.450e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.017e+07, tolerance: 1.468e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.851e+08, tolerance: 1.459e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.506e+08, tolerance: 1.519e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.750e+08, tolerance: 1.428e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.281e+06, tolerance: 1.420e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.506e+08, tolerance: 1.519e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.851e+08, tolerance: 1.459e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.368e+07, tolerance: 1.439e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.400e+06, tolerance: 1.450e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.262e+06, tolerance: 1.420e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.368e+07, tolerance: 1.439e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.523e+07, tolerance: 1.469e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.506e+08, tolerance: 1.519e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.019e+07, tolerance: 1.468e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.163e+07, tolerance: 1.499e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.453e+08, tolerance: 1.488e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.524e+07, tolerance: 1.469e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.193e+09, tolerance: 1.811e+06
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.348e+12, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.076e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.327e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.068e+12, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.207e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.319e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.207e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.040e+12, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.891e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.892e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.073e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.638e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.040e+12, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.068e+12, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.361e+11, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.421e+11, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.111e+12, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.493e+11, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.207e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.377e+11, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.813e+11, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.319e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.068e+12, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.813e+11, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.323e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.630e+12, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.319e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.891e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.081e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.376e+11, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.260e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.040e+12, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.492e+11, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.342e+12, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.753e+12, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.929e+12, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.899e+12, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.897e+12, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.935e+12, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.362e+11, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.159e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.343e+12, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.542e+12, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.158e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.284e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.112e+12, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.751e+12, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.260e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.420e+11, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.282e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.641e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.376e+11, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.362e+11, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.813e+11, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.902e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.492e+11, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.669e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.098e+11, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.325e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.898e+12, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.676e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.421e+11, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.327e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.066e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.769e+12, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.282e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.260e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.265e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.282e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.284e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.078e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.770e+12, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.935e+12, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.109e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.265e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.323e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.899e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.323e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.112e+12, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.083e+12, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.282e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.081e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.284e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.881e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.895e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.083e+12, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.282e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.066e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.322e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.017e+11, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.899e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.627e+12, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.751e+12, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.104e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.809e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.158e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.103e+12, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.282e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.769e+12, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.028e+11, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.676e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.923e+12, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.538e+12, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.282e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.630e+12, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.327e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.109e+12, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.265e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.282e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.923e+12, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.809e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.083e+12, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.895e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.107e+12, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.882e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.323e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.882e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.096e+11, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.886e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.282e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.809e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.868e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.107e+12, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.868e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.895e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.881e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.028e+11, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.096e+11, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.641e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.325e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.868e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.322e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.539e+12, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.323e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.323e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.325e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.078e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.066e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.081e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.073e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.322e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.237e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.921e+12, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.076e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.078e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.881e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.073e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.076e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.886e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.886e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.235e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.233e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.233e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.200e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.200e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.235e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.235e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.687e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.658e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.200e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.237e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.235e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.671e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.133e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.235e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.686e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.233e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.235e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.237e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.659e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.643e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.643e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.671e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.188e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.671e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.191e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.191e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.191e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.453e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.509e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.659e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.183e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.643e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.432e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.415e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.687e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.188e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.509e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.186e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.509e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.186e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.133e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.065e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.183e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.474e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.889e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.188e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.231e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.081e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.452e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.144e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.474e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.453e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.259e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.133e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.186e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.085e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.474e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.183e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.096e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.415e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.144e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.890e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.139e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.432e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.432e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.065e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.065e+14, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.139e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.144e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.259e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.183e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.090e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.948e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.040e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.952e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.969e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.968e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.040e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.096e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.231e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.183e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.231e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.202e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.085e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.096e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.183e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.570e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.952e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.947e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.006e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.890e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.081e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.259e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.005e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.415e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.090e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.203e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.139e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.948e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.951e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.085e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.048e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.006e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.571e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.040e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.040e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.033e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.731e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.081e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.033e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.090e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.708e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.244e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.969e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.028e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.048e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.041e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.033e+14, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.818e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.571e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.243e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.048e+14, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.244e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.028e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.818e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.777e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.708e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.523e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.732e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.028e+14, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.777e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.804e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.818e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.992e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.245e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.732e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.708e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.991e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.465e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.752e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.245e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.219e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.041e+14, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.466e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.592e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.803e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.491e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.593e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.525e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.545e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.593e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.753e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.992e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.491e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.914e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.901e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.777e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.245e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.915e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.525e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.545e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.466e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.795e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.579e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.220e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.364e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.901e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.247e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.390e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.804e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.214e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.491e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.272e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.753e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.272e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.580e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.900e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.247e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.310e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.795e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.793e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.270e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.545e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.310e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.310e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.733e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.494e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.388e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.496e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.057e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.670e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.365e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.216e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.000e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.057e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.496e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.216e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.390e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.872e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.992e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.970e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.220e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.580e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.001e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.994e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.672e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.733e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.365e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.994e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.240e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.915e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.133e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.672e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.122e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.347e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.247e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.872e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.054e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.731e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.970e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.001e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.313e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.073e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.241e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.134e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.241e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.073e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.134e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.072e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.189e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.311e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.484e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.870e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.900e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.898e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.348e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.186e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.189e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.970e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.120e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.486e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.348e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.832e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.486e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.718e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.750e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.751e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.973e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.899e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.901e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.313e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.567e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.901e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.638e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.719e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.568e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.719e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.832e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.567e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.638e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.564e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.818e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.565e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.636e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.567e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.751e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.832e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.589e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.665e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.971e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.499e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.820e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.555e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.820e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.463e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.973e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.664e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.081e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.498e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.122e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.590e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.665e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.285e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.590e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.899e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.454e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.005e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.499e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.007e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.464e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.557e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.287e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.123e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.456e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.084e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.426e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.244e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.557e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.123e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.123e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.464e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.456e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.207e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.353e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.523e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.933e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.344e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.353e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.345e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.442e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.007e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.287e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.084e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.750e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.245e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.427e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.427e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.526e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.345e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.949e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.353e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.748e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.445e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.128e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.445e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.208e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.245e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.355e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.128e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.098e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.935e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.935e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.409e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.187e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.988e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.099e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.989e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.208e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.526e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.355e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.212e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.188e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.212e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.750e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.989e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.128e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.412e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.188e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.881e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.099e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.964e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.355e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.209e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.967e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.951e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.951e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.881e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.412e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.850e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.878e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.947e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.136e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.732e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.692e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.133e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.967e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.851e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.133e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.692e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.946e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.133e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.691e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.885e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.357e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.851e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.404e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.136e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.947e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.670e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.317e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.887e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.887e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.672e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.733e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.433e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.880e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.357e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.408e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.706e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.314e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.705e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.733e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.317e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.357e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.434e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.477e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.359e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.136e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.603e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.359e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.755e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.475e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.672e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.359e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.464e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.139e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.706e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.360e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.752e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.355e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.408e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.477e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.134e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.434e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.140e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.604e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.177e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.134e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.139e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.604e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.360e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.363e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.755e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.363e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.131e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.259e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.465e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.357e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.933e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.933e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.837e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.360e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.235e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.420e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.357e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.360e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.142e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.195e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.142e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.475e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.840e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.025e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.598e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.175e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.259e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.361e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.199e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.177e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.598e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.840e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.595e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.465e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.050e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.361e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.646e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.749e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.920e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.065e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.922e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.142e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.111e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.145e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.225e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.922e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.475e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.199e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.030e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.846e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.145e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.650e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.318e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.109e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.030e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.361e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.669e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.986e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.147e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.017e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.321e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.363e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.050e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.321e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.111e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.362e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.840e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.068e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.809e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.068e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.145e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.225e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.867e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.671e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.985e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.646e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.866e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.650e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.595e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.362e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.565e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.147e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.565e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.671e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.595e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.673e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.595e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.805e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.681e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.671e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.646e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.750e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.364e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.682e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.147e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.846e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.636e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.675e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.809e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.681e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.986e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.513e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.636e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.636e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.364e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.598e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.565e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.409e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.364e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.750e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.683e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.568e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.867e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.598e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.646e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.568e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.671e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.568e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.637e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.637e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.278e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.614e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.674e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.647e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.683e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.024e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.513e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.600e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.518e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.637e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.964e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.614e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.248e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.951e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.647e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.674e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.683e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.677e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.677e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.155e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.513e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.647e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.677e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.617e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.894e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.600e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.600e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.570e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.518e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.570e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.454e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.648e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.570e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.638e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.638e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.329e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.684e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.598e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.614e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.449e+14, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.518e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.684e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.572e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.522e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.680e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.649e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.617e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.617e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.684e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.738e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.572e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.602e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.522e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.979e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.522e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.572e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.619e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.680e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.166e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.604e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.648e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.638e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.649e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.857e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.649e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.639e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.602e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.821e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.639e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.685e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.682e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.648e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.639e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.619e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.682e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.574e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.929e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.602e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.007e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.921e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.574e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.682e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.604e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.604e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.650e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.619e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.574e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.125e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.526e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.650e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.130e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.620e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.685e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.620e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.685e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.606e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.526e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.680e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.640e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.526e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.620e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.640e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.686e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.686e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.187e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.650e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.325e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.576e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.460e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.163e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.640e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.606e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.936e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.684e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.529e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.686e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.684e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.529e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.529e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.576e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.687e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.651e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.576e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.641e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.624e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.843e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.958e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.651e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.533e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.883e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.651e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.622e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.606e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.622e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.641e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.652e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.533e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.165e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.523e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.641e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.622e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.687e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.518e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.577e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.623e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.960e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.533e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.642e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.608e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.150e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.642e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.368e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.577e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.750e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.206e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.608e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.947e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.651e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.536e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.338e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.350e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.577e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.651e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.623e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.536e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.651e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.608e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.609e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.834e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.199e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.001e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.623e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.642e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.356e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.642e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.797e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.520e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.577e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.475e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.625e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.625e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.536e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.595e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.761e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.777e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.214e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.652e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.073e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.133e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.609e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.625e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.070e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.579e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.283e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.609e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.611e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.505e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.664e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.389e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.275e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.869e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.576e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.096e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.480e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.646e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.652e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.009e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.016e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.611e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.274e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.539e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.508e+12, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.653e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.611e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.977e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.653e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.198e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.652e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.662e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.136e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.648e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.495e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.378e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.373e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.056e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.324e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.129e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.970e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.444e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.539e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.128e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.098e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.414e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.438e+12, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.489e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.653e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.003e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.382e+12, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.068e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.632e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.490e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.324e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.626e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.075e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.879e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.906e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.284e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.328e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.899e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.724e+13, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.626e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.895e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.050e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.101e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.332e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.902e+13, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.601e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.418e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.602e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.089e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.003e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.020e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.313e+14, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.681e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.327e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.596e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.541e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.056e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.982e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.684e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.323e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.675e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.927e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.050e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.171e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.678e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.001e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.357e+12, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.233e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.338e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.293e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.058e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.877e+12, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.229e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.393e+12, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.982e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.175e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.002e+13, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.103e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.910e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.046e+13, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.953e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.172e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.727e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.294e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.984e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.154e+13, tolerance: 3.270e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.050e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.044e+13, tolerance: 3.261e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.857e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.597e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.399e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.519e+13, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.524e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.912e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.098e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.690e+13, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.060e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.401e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.024e+13, tolerance: 1.278e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.309e+13, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.103e+13, tolerance: 3.266e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.520e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.171e+13, tolerance: 3.275e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.442e+13, tolerance: 1.282e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.850e+12, tolerance: 3.268e+10
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.457e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.910e+14, tolerance: 1.281e+11
  model = cd_fast.enet_coordinate_descent(
/home/users/ntu/yang0886/.conda/envs/deep/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:695: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.513e+13, tolerance: 4.085e+10
  model = cd_fast.enet_coordinate_descent(
Fitting 5 folds for each of 396 candidates, totalling 1980 fits
Fitting 5 folds for each of 396 candidates, totalling 1980 fits
Fitting 5 folds for each of 396 candidates, totalling 1980 fits
Fitting 5 folds for each of 396 candidates, totalling 1980 fits
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   4.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  15.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  20.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  12.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  11.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  10.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   9.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  38.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   4.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  14.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  56.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   9.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  11.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   8.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  17.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  28.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  47.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  47.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   4.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  22.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  20.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  14.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   6.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  46.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  44.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  25.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   7.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  50.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  26.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  29.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  30.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   7.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  56.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  18.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  20.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  22.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  49.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  36.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  35.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  44.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  41.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  18.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  57.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  39.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  47.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  47.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  43.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  30.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  55.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  12.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   5.9s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  44.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  45.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  20.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  20.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  21.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  17.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  29.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  49.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  11.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  16.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  18.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  22.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  24.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  33.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  37.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  18.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  27.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  23.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  23.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  17.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  12.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  42.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  11.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  34.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  36.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  19.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  24.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  25.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  35.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   6.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  55.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   5.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  24.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  38.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  44.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  10.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  24.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  18.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  15.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  35.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  38.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  55.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  44.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  31.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  24.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  12.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   9.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  22.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  52.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  26.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  25.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  11.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  26.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  13.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   9.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   4.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  45.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  21.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time= 1.0min
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   8.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  24.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  19.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  37.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  45.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  24.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  21.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   5.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  13.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  18.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  21.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   7.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  10.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   6.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  40.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  18.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  23.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  20.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  15.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  47.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  46.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  42.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  15.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time= 1.0min
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  21.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  12.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  34.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  38.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  37.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   9.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  30.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  37.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  38.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   8.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  55.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  22.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  23.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  28.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  37.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  33.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  10.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  17.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   7.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  51.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  49.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   6.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  26.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  24.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  22.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  13.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  37.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  34.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  10.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  25.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  22.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  19.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  25.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   7.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  56.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  37.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   6.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  17.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  20.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  17.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   4.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  47.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  40.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   8.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  30.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  29.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   6.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   3.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  48.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  36.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  43.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  18.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  34.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  13.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  10.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   7.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   5.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   6.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  47.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  12.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  56.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  36.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  34.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  13.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  21.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  11.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  14.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   8.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  38.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  43.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   7.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  24.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  12.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  28.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  36.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  40.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   8.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  24.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  34.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   6.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  15.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   7.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  16.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  37.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  36.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  33.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   7.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  27.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  46.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  24.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  36.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  37.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   6.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  22.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  20.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  22.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  15.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  20.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   5.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  33.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  45.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  18.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  30.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  12.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  18.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   9.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  15.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  15.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   6.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  34.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   7.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  22.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  23.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  19.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  21.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  14.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   4.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  35.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  20.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   6.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  23.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  24.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  10.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  39.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  47.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  10.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  19.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  19.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  14.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  20.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   9.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  26.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  49.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  37.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  14.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  28.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  20.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  47.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   9.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  38.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  48.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  46.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time= 1.1min
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  25.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  36.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  30.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   4.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  12.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   8.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  14.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  11.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  36.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  48.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  35.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   5.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  25.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  18.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  17.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   4.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  47.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  46.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  35.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  10.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   9.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  29.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  24.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  15.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  30.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  18.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  26.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  32.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  13.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  11.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   9.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  20.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  33.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  15.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  35.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  28.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  43.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   6.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  46.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  28.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   5.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   4.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  27.1s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  42.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.9s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  14.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  30.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  19.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  25.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  11.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   6.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   3.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  40.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  28.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  12.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  18.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  22.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  33.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  17.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  24.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  18.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  32.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  22.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  21.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   9.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   7.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  34.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  31.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   6.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  16.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  19.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  15.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  14.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   7.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   4.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  47.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  48.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   6.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   5.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  21.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   8.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   9.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   8.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  26.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  36.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  18.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  16.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  40.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  44.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  35.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  20.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   4.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  20.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  20.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  36.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  19.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  35.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  34.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  15.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  30.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  20.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  35.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   7.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  19.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  27.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  19.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   8.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  14.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  28.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  34.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  35.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   9.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  22.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  22.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   6.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  25.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  18.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   5.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   9.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  29.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  19.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  46.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  43.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  18.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   2.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  25.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  18.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  20.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  15.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  56.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  11.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  30.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  21.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  28.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  50.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  12.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  48.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  51.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   9.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   8.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  59.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  27.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  35.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  35.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  50.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  30.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time= 1.1min
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  21.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  21.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   7.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   4.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  33.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  27.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   6.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   4.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  14.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  18.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  25.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   4.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  38.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  48.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  48.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  33.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  21.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  20.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  48.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.1s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  27.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   9.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  11.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  40.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   2.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   4.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  49.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  44.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  13.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  12.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  15.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  11.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   7.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   6.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  36.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  30.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   8.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   4.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   9.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  20.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  23.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  20.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  19.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   4.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  39.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  23.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  10.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  34.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  52.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  12.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   5.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  20.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  27.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  57.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  35.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  40.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  13.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  37.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  14.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  54.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  50.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  46.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  33.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  49.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  13.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  34.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  16.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  33.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   4.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   4.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  36.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  38.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  36.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  23.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  12.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  24.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  11.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  25.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  47.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   9.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  19.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  19.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  18.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  15.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  21.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   8.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  36.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  45.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  19.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   9.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  20.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  25.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  18.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  20.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  13.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   2.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  44.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  10.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   2.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   9.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  38.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  22.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  11.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  18.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  20.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  42.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  25.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  10.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   4.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  20.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  15.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  17.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  59.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  39.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  51.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  10.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  17.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  16.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  29.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  28.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   6.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  47.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  42.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  24.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  19.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  56.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  14.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   7.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  33.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  40.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  15.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  23.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  27.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  12.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  17.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  13.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  47.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  47.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  34.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  40.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   9.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  34.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  23.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   9.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  21.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   8.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  19.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  14.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  22.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  22.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   9.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   6.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  39.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  51.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  25.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   8.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  21.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  27.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  19.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   9.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   3.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   2.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  49.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  47.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  31.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   9.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  17.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  23.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  21.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  12.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   7.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   5.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  47.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  33.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  35.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  13.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   7.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  16.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   7.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   2.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  23.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  37.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   9.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  34.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  14.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  17.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  25.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  49.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  38.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  20.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   7.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  18.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  44.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  36.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  36.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  47.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   7.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  38.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  49.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  50.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   8.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   4.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  25.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  21.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  29.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  17.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  18.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  58.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  25.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  13.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  46.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  21.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  11.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  37.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  36.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  37.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  24.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   9.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  12.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  39.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  23.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  14.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   4.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  35.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  20.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   5.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  17.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  42.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  11.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  10.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  11.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  16.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  51.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  49.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  37.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  21.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  24.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  14.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   6.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  49.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  38.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  25.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  36.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  14.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  43.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   6.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  11.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  18.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  32.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  21.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  48.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  26.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  40.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  44.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   8.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  21.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  39.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  11.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  29.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  24.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  21.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  30.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  15.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  19.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  15.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   9.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  12.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  24.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  47.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  21.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  26.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  29.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  34.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time= 1.0min
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  28.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   8.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  54.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  18.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   6.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  12.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  12.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   5.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   7.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time= 1.1min
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  17.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  21.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  21.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  21.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  17.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  24.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  15.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  46.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  25.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  17.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  22.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  27.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   9.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  51.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  39.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  26.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  17.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  54.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  18.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   3.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   4.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  21.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  32.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   8.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  32.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  25.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  22.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  12.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  11.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  34.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  57.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  48.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  26.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   4.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  23.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  40.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   6.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  11.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  14.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   9.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  46.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  33.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   9.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  15.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  22.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  34.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  37.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  10.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  51.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  31.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  14.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   5.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   7.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  39.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  18.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  13.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  57.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  18.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   8.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  10.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  44.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  30.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  28.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   9.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  16.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  21.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  19.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  32.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  11.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  21.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  37.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  22.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time= 1.1min
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  11.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  10.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   9.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  25.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  16.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  14.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  37.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  29.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  15.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  27.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  11.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   6.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  59.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  21.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  20.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   3.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  10.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  37.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  22.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  10.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   5.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  25.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  37.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  14.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   8.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  36.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   7.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   6.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  33.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  11.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   4.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  25.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  32.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  15.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   9.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  26.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  54.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  43.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  28.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  18.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   7.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  20.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  17.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   8.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  14.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  10.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   6.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  45.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   7.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  57.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  33.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   6.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  48.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  37.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  20.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  10.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  29.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  21.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  23.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  14.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  21.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  20.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  52.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  55.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   3.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  37.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  30.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  29.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   7.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   6.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   6.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  17.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  21.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  42.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  14.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  26.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  36.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  53.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  47.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   7.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   4.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  54.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  21.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  16.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  11.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  20.1s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  43.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  44.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  20.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  48.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  31.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   5.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  26.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  34.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   8.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  20.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  24.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  26.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   6.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   4.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  10.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  25.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  43.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   8.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   5.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  47.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  39.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  38.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  37.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  36.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  19.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  29.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  27.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  18.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  17.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   7.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  13.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  23.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   6.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  28.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  37.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  19.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   9.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  10.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  37.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  48.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  32.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   9.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  13.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  25.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  23.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  16.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  24.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   9.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  35.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  50.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  46.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  44.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  27.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   9.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  42.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  17.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  13.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  16.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  39.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  47.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  45.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  29.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   7.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  17.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  19.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   8.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  21.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  39.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  40.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  27.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  36.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  32.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   7.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  21.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  17.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  21.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  34.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   8.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  51.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  33.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  32.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  30.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  20.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  12.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  13.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  39.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  36.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  25.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  27.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  21.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  25.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  12.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  33.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  45.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  22.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  21.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  21.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  18.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  28.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   6.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  39.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   7.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  21.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  17.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  19.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  46.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  31.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  46.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  42.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  32.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   7.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   6.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   2.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   4.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  57.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  41.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   2.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  33.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  37.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  14.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  20.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  13.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  10.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  21.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  48.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  49.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  26.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  18.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  19.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  12.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  25.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  20.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  18.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   6.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   6.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   6.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  30.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  29.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  35.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  39.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  14.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  13.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  51.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  53.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  36.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  30.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time= 1.1min
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   4.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   4.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   4.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  54.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  23.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  25.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  17.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   8.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  15.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  12.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  47.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  47.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  33.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time= 1.1min
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  15.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  15.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  17.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  40.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  33.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  38.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  36.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  17.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  17.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   2.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  19.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  10.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  11.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  10.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  39.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  43.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  33.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  20.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  48.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  14.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  13.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   6.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  52.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  22.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  21.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  44.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  12.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  34.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  34.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  20.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  25.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  19.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  56.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  36.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  53.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  19.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  22.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   6.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  34.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  29.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  13.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  18.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  16.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  10.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  34.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  12.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  10.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  24.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  13.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  15.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  10.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  17.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  10.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   5.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  22.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  36.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  45.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  44.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  20.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  41.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  14.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  11.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   8.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  22.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  12.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  28.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  16.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  20.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   5.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  42.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  47.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  26.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  12.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  24.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time= 1.1min
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  12.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  13.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  36.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  19.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  51.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  25.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  25.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  23.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  21.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  20.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   9.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  44.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  18.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   2.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  11.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  22.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  54.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  33.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  23.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  12.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  16.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  36.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  22.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   8.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  17.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   6.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   5.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  40.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  47.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  35.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   8.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  29.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  23.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  15.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  19.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   5.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  30.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  44.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  19.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  15.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  21.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  53.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  15.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  14.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   9.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  46.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  35.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  25.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  12.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   9.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  29.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  37.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  17.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  26.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   7.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  54.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  18.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  31.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  11.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  24.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  22.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  20.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time= 1.1min
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   6.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   5.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  24.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  13.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  37.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  39.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  35.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   4.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  50.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  47.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  40.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   7.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   7.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   4.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  24.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  12.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  28.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  52.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  28.9s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  11.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   8.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  11.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  15.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  25.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  33.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  35.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  51.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  37.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  26.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  20.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   4.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  22.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  20.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time= 1.0min
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  37.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  41.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  31.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   8.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  22.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  30.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  18.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  10.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  35.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  15.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  10.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  29.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  25.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  36.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   4.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   9.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  27.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  49.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  34.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  15.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  31.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  20.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  21.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  28.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   6.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   4.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  41.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  26.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   2.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time= 1.0min
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   3.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   5.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  37.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  38.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  44.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  21.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   9.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   9.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  19.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  16.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  50.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  23.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  23.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time= 1.2min
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   7.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  34.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  30.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   7.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time= 1.3min
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  39.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  40.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  35.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   5.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  35.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  13.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  16.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  14.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  18.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  11.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  48.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  26.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  39.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  30.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  22.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  23.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  19.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  32.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  24.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  20.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  12.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  23.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  28.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  20.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  12.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  22.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  35.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  25.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  11.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  26.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  50.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  15.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  21.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   9.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  35.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  39.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  34.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  34.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  26.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   6.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  27.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  24.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   5.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  36.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  38.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  31.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  20.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  10.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  11.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  12.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  11.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   8.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  33.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  37.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  35.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  23.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  10.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  32.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  17.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   5.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  11.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  39.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  42.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  47.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  18.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   8.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   4.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  21.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   6.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   9.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   8.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  42.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  33.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  38.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   7.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  23.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  19.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  14.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  37.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  36.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  26.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  13.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  21.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  24.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  21.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  17.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   6.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   5.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  26.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  30.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  33.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  35.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  28.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  12.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  36.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  23.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  16.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  26.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  32.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  27.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  38.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  39.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  34.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  23.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  16.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  17.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  18.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  35.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  42.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  31.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  10.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   9.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  27.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  19.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  14.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  46.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  26.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  27.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   9.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  39.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  23.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  14.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  43.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  24.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  17.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  23.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   4.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  22.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  15.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  27.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   9.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  13.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   9.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  20.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  12.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  20.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  12.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   7.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   8.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  25.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  15.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   9.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  13.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  52.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   6.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  30.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  35.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  35.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  21.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  21.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  30.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  23.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   7.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  17.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  20.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  33.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  40.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  41.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  36.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  10.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  22.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  18.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  25.1s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  24.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  15.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  50.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  49.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  35.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  51.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   8.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   4.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   9.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  24.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  45.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  26.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  37.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  45.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  47.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  36.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  26.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  14.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  27.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  32.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  16.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  12.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  18.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  32.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  36.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  14.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  43.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  27.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  11.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  37.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   7.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  37.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  39.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  40.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  36.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  31.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   9.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  36.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  30.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   6.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  40.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  44.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  18.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  11.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  25.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   2.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  34.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  17.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  33.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  37.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  12.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   5.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  47.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  39.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  35.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  44.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  26.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  37.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  44.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  29.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  35.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  49.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  48.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  33.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  14.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   6.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  18.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  10.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  20.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   6.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   2.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  39.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  37.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  18.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   5.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  12.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  54.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  21.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   7.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  14.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   6.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  35.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  43.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  34.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  42.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  18.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  10.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  12.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  22.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  57.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  14.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  32.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  39.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  23.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  26.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  12.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  59.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  52.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  44.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  16.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  19.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  25.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  22.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  13.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  25.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  17.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  25.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  47.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  49.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  26.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  56.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  16.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  45.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  33.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  36.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  20.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  16.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  13.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  11.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  45.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  38.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  24.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   6.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  58.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  29.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  21.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  47.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  23.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  21.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  20.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  20.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  13.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  15.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  30.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   9.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  38.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  28.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  54.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  22.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  26.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  25.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  22.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  57.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  36.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  19.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  15.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  20.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  21.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  20.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  26.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   9.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   4.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  53.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  44.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   6.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  21.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  19.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  30.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  21.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   5.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.0s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  38.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.8s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  32.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   6.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  22.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  21.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  16.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  24.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   5.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   6.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  47.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  34.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time= 1.1min
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  18.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  13.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  12.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.1s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  26.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  19.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   7.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  35.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  19.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  21.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  25.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  12.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  37.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  38.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  38.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  23.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  29.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  17.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   7.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  39.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  30.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  43.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  23.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  12.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  35.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  25.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  35.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  49.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  51.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  38.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  36.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  27.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   9.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   5.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  38.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  37.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   9.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  32.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  42.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  23.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  19.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   9.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   7.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  24.9s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  24.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  35.8s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  11.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  10.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  11.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  47.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  18.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  13.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  27.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  28.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   7.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  39.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  22.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  22.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.2s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   4.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  10.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  42.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  45.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  27.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   5.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time= 1.0min
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  17.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  49.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  16.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   5.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  58.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  20.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  11.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  12.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  12.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  39.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  49.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  45.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  27.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  13.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  31.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   6.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  36.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  19.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  14.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  26.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   9.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  33.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   9.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  35.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  37.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  43.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  31.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  36.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  13.8s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  14.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  18.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  11.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   9.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   4.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  33.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  40.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  29.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.9s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  59.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   9.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   5.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  13.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  25.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  50.0s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.8s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  31.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  15.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   5.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  23.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  18.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  17.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  52.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  38.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  45.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  36.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  36.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  23.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  24.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   7.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  14.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  45.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  11.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   9.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  19.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   7.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   5.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  22.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  36.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.2s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  47.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  43.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  39.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  17.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  12.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   5.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  18.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time= 1.1min
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  10.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   8.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   6.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   8.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  33.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  26.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  18.7s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  40.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  10.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  11.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  10.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  48.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  49.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  43.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  19.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.9s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  42.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  18.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  17.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  13.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  12.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  16.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  33.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  43.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  29.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  29.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  18.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  34.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  25.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  11.7s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  12.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  20.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  42.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  43.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   8.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.2s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  37.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  10.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  15.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  14.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  26.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  39.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  36.2s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  35.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  24.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   5.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  21.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  15.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  28.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  18.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   4.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  18.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.7s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  10.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  42.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  34.4s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  22.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   7.0s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   3.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  44.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.8s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  33.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  15.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  21.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  19.0s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.1s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  26.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  47.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  30.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  16.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   6.7s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   3.2s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  32.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  26.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  20.1s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  15.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   7.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   9.0s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  35.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  37.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  48.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  42.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  44.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  14.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   4.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  19.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  22.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  22.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  30.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   7.9s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   3.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   6.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  24.1s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.7s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  47.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  21.7s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  20.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time= 1.1min
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  24.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  15.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  12.0s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  18.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  36.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  43.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  29.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  31.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  35.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  16.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   7.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  37.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  49.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  10.9s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  39.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  51.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  45.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  53.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  19.8s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  15.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.7s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   4.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  10.1s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  26.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  25.0s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  20.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  10.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   8.2s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  30.2s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.3s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  40.9s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  26.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  25.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  16.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  21.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  21.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  21.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  15.7s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   9.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   5.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   6.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  12.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  44.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  57.9s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  47.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  16.0s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   6.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  13.8s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   7.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  33.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  21.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   8.3s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  41.4s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  37.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  36.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  38.3s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  46.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  16.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   4.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  19.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  16.8s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  47.4s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  28.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   3.4s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   3.4s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  49.0s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  56.5s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  33.7s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  45.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.1s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  16.5s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   8.1s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   3.5s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.0s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  16.2s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  16.9s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  32.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  17.0s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  35.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  44.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  37.0s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  32.6s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  32.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.6s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  25.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  15.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.9s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   1.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  16.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  13.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  22.9s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  20.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  27.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.9s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  28.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  31.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  41.8s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  34.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  30.3s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  18.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   3.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.9s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   7.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  28.1s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  21.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  13.0s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  16.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  17.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   4.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  33.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  36.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  49.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  29.2s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  41.2s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  40.2s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  34.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.2s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   4.1s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  10.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.1s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  11.2s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  21.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  34.8s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  37.8s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  23.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  23.7s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  34.6s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  43.1s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  32.0s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  29.9s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  34.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.0s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  16.7s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   3.3s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   5.3s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   2.0s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.6s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   2.3s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  21.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  24.3s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  29.3s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  15.4s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  29.5s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.4s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  27.9s
[CV] END estimator__alpha=0.30000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  40.5s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  45.0s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  28.1s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  41.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  40.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  39.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  19.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.5s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   3.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   1.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.2s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.3s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.0s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.7s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   1.1s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  12.3s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  42.4s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  20.7s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   8.7s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  14.9s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  15.2s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.4s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  42.8s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  26.1s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  51.7s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  34.2s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  40.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  41.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  27.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  17.2s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  19.5s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   1.4s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   2.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.8s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.3s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=0.01, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   2.4s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  25.6s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  37.9s
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  12.1s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  28.0s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  16.0s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.4s
[CV] END estimator__alpha=8.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  25.6s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  33.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.0s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  38.8s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  39.3s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  44.4s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  37.7s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  20.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   6.2s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   2.8s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.7s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.4s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.6s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.0s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=0.9, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   1.0s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.4s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=   0.7s
[CV] END estimator__alpha=2.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   1.5s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.3s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  17.8s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  19.9s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  19.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=  19.3s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=median; total time=  18.1s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  29.9s
[CV] END estimator__alpha=2.9000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   1.5s
[CV] END estimator__alpha=0.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  51.5s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  32.0s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.6s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  45.2s
[CV] END estimator__alpha=1.9000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  31.9s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  40.3s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=  27.8s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=  17.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.7s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   1.3s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   4.9s
[CV] END estimator__alpha=1.2000000000000002, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=   2.5s
[CV] END estimator__alpha=1.6, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   2.6s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   1.7s
[CV] END estimator__alpha=2.7, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.2s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   2.5s
[CV] END estimator__alpha=0.7000000000000001, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.1, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.6s
[CV] END estimator__alpha=1.5000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.8s
[CV] END estimator__alpha=2.0, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=2.4000000000000004, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=most_frequent; total time=   0.4s
[CV] END estimator__alpha=2.8000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.8s
[CV] END estimator__alpha=0.4, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.8, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   1.3s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=1.7000000000000002, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=mean; total time=   0.5s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=median; total time=   0.6s
[CV] END estimator__alpha=2.5000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=   0.5s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=   0.9s
[CV] END estimator__alpha=0.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=   0.6s
[CV] END estimator__alpha=0.5, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time= 1.0min
[CV] END estimator__alpha=1.4000000000000001, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  36.6s
[CV] END estimator__alpha=2.1, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  29.1s
[CV] END estimator__alpha=10.0, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=most_frequent; total time=  45.1s
[CV] END estimator__alpha=0.6, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=mean; total time=  41.5s
[CV] END estimator__alpha=1.0, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=median; total time=  35.4s
[CV] END estimator__alpha=1.3000000000000003, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=most_frequent; total time=  39.6s
[CV] END estimator__alpha=1.8000000000000003, estimator__fit_intercept=False, estimator__positive=True, imputer__strategy=mean; total time=  31.2s
[CV] END estimator__alpha=2.2, estimator__fit_intercept=True, estimator__positive=True, imputer__strategy=most_frequent; total time=  35.1s
[CV] END estimator__alpha=2.6, estimator__fit_intercept=True, estimator__positive=False, imputer__strategy=mean; total time=  38.9s
[CV] END estimator__alpha=3.0000000000000004, estimator__fit_intercept=False, estimator__positive=False, imputer__strategy=median; total time=  17.2s
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Resource Usage on 2024-12-30 20:52:32.321663:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	JobId: 9085266.pbs101
	Project: personal-yang0886
	Exit Status: 0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	NCPUs: Requested(127), Used(127)
	CPU Time Used: 30:20:08
	Memory: Requested(991gb), Used(65172696kb)
	Vmem Used: 179157296kb
	Walltime: Requested(00:30:00), Used(00:09:55)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	Execution Nodes Used: (x1000c4s1b0n0:ncpus=127:mem=1039138816kb)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	No GPU-related information available for this job.
